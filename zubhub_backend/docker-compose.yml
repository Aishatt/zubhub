version: '3.8'

services:
    web:
        env_file: .env
        build:
            context: .
            dockerfile: ./Dockerfile
        command: bash -c "python /zubhub_backend/zubhub/manage.py collectstatic --noinput && /usr/local/bin/gunicorn zubhub.wsgi --bind 0.0.0.0:8000 --chdir /zubhub_backend/zubhub"
        environment:
            - ENVIRONMENT=${ENVIRONMENT}
            - SECRET_KEY:${SECRET_KEY}
            - DEBUG:${DEBUG}
            - POSTGRES_NAME=${POSTGRES_NAME}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
            - SENDGRID_API_KEY=${SENDGRID_API_KEY}
        volumes:
            - .:/zubhub_backend
        ports:
            - 8000:8000
        depends_on:
            - db
            - rabbitmq
            
    db:
        env_file: .env
        image: postgres:11
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - 5432:5432

    rabbitmq:
        env_file: .env
        image: rabbitmq:3-management
        ports:
            - 5672:5672
            - 15672:15672

    celery_worker:
        env_file: .env
        build:
            context: .
            dockerfile: ./Dockerfile
        image: zubhub_celery_worker
        command: bash -c "cd zubhub && celery -A zubhub worker -l INFO"
        volumes:
            - .:/zubhub_backend
        depends_on:
            - rabbitmq
            - db

    flower:
        env_file: .env
        build:
            context: .
            dockerfile: ./Dockerfile
        image: zubhub_celery_flower
        ports:
            - 5555:5555
        command: bash -c 'cd zubhub && celery flower --app=zubhub --broker="${CELERY_BROKER}" --basic_auth="${CELERY_FLOWER_USER}:${CELERY_FLOWER_PASSWORD}"'
        volumes:
            - .:/zubhub_backend
        depends_on:
            - celery_worker
            - rabbitmq
            - db

    prometheus:
        image: prom/prometheus
        ports:
            - 9090:9090
        command:
            - --config.file=/etc/prometheus/prometheus.yml
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        depends_on:
            - cadvisor

    cadvisor:
       image: google/cadvisor
       container_name: cadvisor
       volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro

volumes:
    postgres_data:
